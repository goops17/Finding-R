<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wall</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state=1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_down=keyboard_check_pressed(vk_down);
if (key_down){
    state+=1;
    if(state&gt;3)
    {
        state=3;
    }
}

key_up=keyboard_check_pressed(vk_up);
if (key_up){
    state-=1;
    if(state&lt;1)
    {
        state=1;
    }
}

key_select=max(keyboard_check_pressed(vk_space),keyboard_check_pressed(vk_enter),0);
if(key_select){
    if (state=1)
    {
        if instance_exists(obj_begain)
        {
            if (obj_begain.visible)
            {
            scr_open();
            
            } 
        }
        if instance_exists(obj_resume)
        {
            if (obj_resume.visible)
            {
            with(obj_player) paused=false;
            }  
        }
        if instance_exists(obj_opt_back)
        {
            if (obj_opt_back.visible)
            {
                obj_begain.visible=true;
                obj_resume.visible=false;
                obj_options.visible=true;
                obj_exit.visible=true;
                obj_text.visible=true;
                obj_opt_back.visible=false; 
                obj_opt_clear.visible=false;
        state=1;    
            }  
        }
    }
    else if(state=2)
    {
         if instance_exists(obj_options)
        {
            if (obj_options.visible)
            {
                obj_begain.visible=false;
                obj_resume.visible=false;
                obj_options.visible=false;
                obj_exit.visible=false;
                obj_text.visible=false;
                obj_opt_back.visible=true; 
                obj_opt_clear.visible=true;
                state=1;
            }  
        }
        if instance_exists(obj_opt_clear)
        {
            if (obj_opt_clear.visible)
            {
                if (file_exists("level.rif")) file_delete("level.rif")
                room_restart();
            }  
        }
         
    }
    else if(state=3)
    {
        exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>25,15</point>
    <point>25,25</point>
  </PhysicsShapePoints>
</object>
